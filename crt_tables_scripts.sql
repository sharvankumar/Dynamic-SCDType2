/* Store the run statistics  of Scd Type 2 run */

CREATE TABLE ETL_JOB_RUN
(
  JOB_OWNER         VARCHAR2(100 BYTE),
  JOB_NAME          VARCHAR2(100 BYTE),
  START_DATE        DATE,
  END_DATE          DATE,
  RUN_STATUS        VARCHAR2(100 BYTE),
  RUN_TIME_SECONDS  NUMBER,
  RUN_TIME_MINUTES  NUMBER,
  LOG_MESSAGE       VARCHAR2(4000 BYTE),
  RCD_PROCESSED     NUMBER,
  SRC_TABLE_NAME    VARCHAR2(100 BYTE),
  TRG_TABLE_NAME    VARCHAR2(100 BYTE),
  SQL_TEXT          CLOB,
  ERROR_TEXT        CLOB
)

CREATE BITMAP INDEX EJR_JOB_NAME_BMX01 ON ETL_JOB_RUN
(RUN_STATUS)
LOGGING;

CREATE INDEX EJR_JOB_NAME_IDX01 ON ETL_JOB_RUN
(JOB_NAME)
LOGGING;

/* this table hold the metadata for the table to run as SCD Type2  */

CREATE TABLE SCD_TYPE2_METADATA
(
  SUBJECT_AREA            VARCHAR2(100 BYTE),
  SRC_TABLE_OWNER         VARCHAR2(100 BYTE),
  SRC_TABLE_NAME          VARCHAR2(30 BYTE),
  SRC_TABLE_BUSINESS_KEY  VARCHAR2(4000 BYTE),
  SRC_TYPE02_COLUMN_NAME  VARCHAR2(4000 BYTE)   DEFAULT 'ALL',
  DIM_TABLE_NAME          VARCHAR2(30 BYTE),
  DIM_TABLE_SKEY          VARCHAR2(30 BYTE),
  SCD_TYPE                VARCHAR2(30 BYTE)     DEFAULT '2',
  CREATED_BY              VARCHAR2(1000 BYTE)   DEFAULT SYS_CONTEXT('USERENV','OS_USER'),
  CREATE_DATE             DATE                  DEFAULT sysdate
);


CREATE UNIQUE INDEX SCD_TYPE2_METADATA_PK ON SCD_TYPE2_METADATA
(SUBJECT_AREA, DIM_TABLE_NAME)
LOGGING;

ALTER TABLE SCD_TYPE2_METADATA ADD (
  CONSTRAINT SCD_TYPE2_METADATA_PK
  PRIMARY KEY
  (SUBJECT_AREA, DIM_TABLE_NAME)
  USING INDEX SCD_TYPE2_METADATA_PK
  ENABLE VALIDATE);

/* This hold the row type and below is the insert statement. */

CREATE TABLE SCD_ROW_TYPE
(
  SCD_ROW_TYPE_ID           NUMBER              NOT NULL,
  SCD_ROW_TYPE_DESCRIPTION  VARCHAR2(20 CHAR)
);

SET DEFINE OFF;
Insert into IQETL.SCD_ROW_TYPE
   (SCD_ROW_TYPE_ID, SCD_ROW_TYPE_DESCRIPTION)
 Values
   (1, 'For Insert');
Insert into IQETL.SCD_ROW_TYPE
   (SCD_ROW_TYPE_ID, SCD_ROW_TYPE_DESCRIPTION)
 Values
   (2, 'For Update');
COMMIT;


/* Usage sample */
--SCD_TYPE2_METADATA
Insert into SCD_TYPE2_METADATA
   (SUBJECT_AREA, SRC_TABLE_OWNER, SRC_TABLE_NAME, SRC_TABLE_BUSINESS_KEY, SRC_TYPE02_COLUMN_NAME, 
    DIM_TABLE_NAME, DIM_TABLE_SKEY, SCD_TYPE, CREATED_BY, CREATE_DATE)
 Values
   ('EMP', 'SHARAN', 'DB_DEPARTMENT', 'DEPARTMENT_CODE', 'DEPT_LONG_TITLE,DEPT_SHORT_TITLE', 
    'D_DB_DEPARTMENT_TYP02', 'D_DB_DEPARTMENT_SKEY', '2', 'sharvanKumar', TO_DATE('8/24/2016 1:47:38 PM', 'MM/DD/YYYY HH:MI:SS AM'));
COMMIT;

OR

insert into SCD_TYPE2_METADATA ( Subject_Area, SRC_Table_OWNER, Src_Table_name, SRC_Table_business_key,SRC_TYPE02_Column_Name, Dim_Table_name,DIM_Table_SKEY)
values  ('EMP', 'SHARAN','DB_DEPARTMENT', q'{DEPARTMENT_CODE}','ALL','D_DB_DEPARTMENT_TYP02','D_DB_DEPARTMENT_SKEY' );

-- run the procedure or job from datastage. ( I would prefer to run the datastage job )
DECLARE
-- Declarations
var_P_DIM_TAB_OWNER VARCHAR2(32767);
var_P_DIM_SUBJECT_AREA VARCHAR2(32767);
var_P_DIM_TABLE_NAME VARCHAR2(32767);
BEGIN
-- Initialization
var_P_DIM_TAB_OWNER := 'SHARAN';
var_P_DIM_SUBJECT_AREA := 'EMP';
var_P_DIM_TABLE_NAME := 'D_EMPLOYEE';

-- Call
DYNAMIC_TYPE2.LOAD_TYPE2_PROC(P_DIM_TAB_OWNER => var_P_DIM_TAB_OWNER, P_DIM_SUBJECT_AREA => var_P_DIM_SUBJECT_AREA, P_DIM_TABLE_NAME => var_P_DIM_TABLE_NAME);

-- Transaction Control
COMMIT;END;










